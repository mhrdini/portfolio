{
  "ignorePatterns": ["**/*.css"],
  "env": {
    "browser": true,
    "es2021": true,
    "node": true
  },
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended",
    "prettier"
  ],
  "overrides": [
    {
      "env": {
        "node": true
      },
      "files": [".eslintrc.{js,cjs}"],
      "parserOptions": {
        "sourceType": "script"
      }
    },
    {
      "files": ["**/*.ts", "**/*.tsx"],
      "plugins": [
        "react",
        "unused-imports",
        "tailwindcss",
        "import",
        "simple-import-sort"
      ],
      "extends": ["plugin:tailwindcss/recommended"],
      "parserOptions": {
        "project": "./tsconfig.json"
      },
      "rules": {
        "import/extensions": [
          "error",
          "ignorePackages",
          {
            "js": "never",
            "jsx": "never",
            "ts": "never",
            "tsx": "never",
            "": "never"
          }
        ],
        // Avoid missing file extension errors when using "@/" alias
        "react/destructuring-assignment": "off",
        // Vscode doesn"t support automatically destructuring, it"s a pain to add a new variable
        "react/require-default-props": "off",
        // Allow non-defined react props as undefined
        "react/jsx-props-no-spreading": "off",
        // _app.tsx uses spread operator and also, react-hook-form
        "@typescript-eslint/comma-dangle": "off",
        // Avoid conflict rule between Eslint and Prettier
        "@typescript-eslint/consistent-type-imports": "error",
        // Ensure `import type` is used when it"s necessary
        "import/prefer-default-export": "off",
        // Named export is easier to refactor automatically
        "tailwindcss/no-custom-classname": "off",
        "tailwindcss/classnames-order": "off",
        // "tailwindcss/classnames-order": [
        //   "warn",
        //   {
        //     officialSorting: true,
        //   },
        // ], // Follow the same ordering as the official plugin `prettier-plugin-tailwindcss`
        "simple-import-sort/imports": "error",
        // Import configuration for `eslint-plugin-simple-import-sort`
        "simple-import-sort/exports": "error",
        // Export configuration for `eslint-plugin-simple-import-sort`
        "@typescript-eslint/no-unused-vars": "off",
        "unused-imports/no-unused-imports": "error",
        "unused-imports/no-unused-vars": [
          "error",
          {
            "argsIgnorePattern": "^_"
          }
        ]
      }
    },
    {
      "files": ["**/*.astro"],
      "plugins": [
        "astro",
        "react",
        "unused-imports",
        "tailwindcss",
        "import",
        "simple-import-sort"
      ],
      "extends": ["plugin:tailwindcss/recommended"],
      "parser": "astro-eslint-parser",
      "parserOptions": {
        "parser": "@typescript-eslint/parser",
        "extraFileExtensions": [".astro"]
      },
      "rules": {
        "astro/no-conflict-set-directives": "error",
        "astro/no-unused-define-vars-in-style": "error",
        "astro/no-set-text-directive": "error",
        "astro/no-unused-css-selector": "off",
        "import/extensions": [
          "error",
          "ignorePackages",
          {
            "js": "never",
            "jsx": "never",
            "ts": "never",
            "tsx": "never",
            "": "never"
          }
        ],
        // Avoid missing file extension errors in .astro files
        "import/no-unresolved": [
          "error",
          {
            "ignore": ["@/*"]
          }
        ],
        // Disable no-unresolved rule for .astro files
        "react/jsx-filename-extension": [
          1,
          {
            "extensions": [".astro"]
          }
        ],
        // Accept jsx in astro files
        "react/destructuring-assignment": "off",
        // Vscode doesn"t support automatically destructuring, it"s a pain to add a new variable
        "react/require-default-props": "off",
        // Allow non-defined react props as undefined
        "react/jsx-props-no-spreading": "off",
        // _app.tsx uses spread operator and also, react-hook-form
        "@typescript-eslint/comma-dangle": "off",
        // Avoid conflict rule between Eslint and Prettier
        "@typescript-eslint/consistent-type-imports": "error",
        // Ensure `import type` is used when it"s necessary
        "import/prefer-default-export": "off",
        // Named export is easier to refactor automatically
        "tailwindcss/no-custom-classname": "off",
        "tailwindcss/classnames-order": "off",
        // "tailwindcss/classnames-order": [
        //   "warn",
        //   {
        //     officialSorting: true,
        //   },
        // ], // Follow the same ordering as the official plugin `prettier-plugin-tailwindcss`
        "simple-import-sort/imports": "error",
        // Import configuration for `eslint-plugin-simple-import-sort`
        "simple-import-sort/exports": "error",
        // Export configuration for `eslint-plugin-simple-import-sort`
        "@typescript-eslint/no-unused-vars": "off",
        "unused-imports/no-unused-imports": "error",
        "unused-imports/no-unused-vars": [
          "error",
          {
            "argsIgnorePattern": "^_"
          }
        ]
      }
    }
  ],
  "parserOptions": {
    "ecmaVersion": "latest",
    "parser": "@typescript-eslint/parser",
    "sourceType": "module"
  },
  "plugins": ["@typescript-eslint"],
  "rules": {}
}
